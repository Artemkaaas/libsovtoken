ANDROID_BUILD_DIR := _build_android
ANDROID_PREBUILT_DIR=$(ANDROID_BUILD_DIR)/prebuilt

REPO_SOVRIN_ORG_ANDROID_PREBUILD_URL := https://repo.sovrin.org/android/libindy
LIBSOVTOKEN_DEPS_FILE := $(PROJECT_DIR)/libsovtoken/build_scripts/android/libsovtoken/libsovtoken.dependencies.txt

get_android_dependency = $(call check_non_empty,$(shell sed -n -e '/^$(1)=.\+/bx' -e 'd' -e ':x' -e 'p' -e 'q' $(2)),"$(1) is not found in $(2)")

LIBINDY_DEP_SPEC := $(subst =, ,$(call get_android_dependency,libindy,$(LIBSOVTOKEN_DEPS_FILE)))
LIBINDY_VERSION ?= $(word 2,$(LIBINDY_DEP_SPEC))
LIBINDY_BRANCH ?= $(word 3,$(LIBINDY_DEP_SPEC))

#DEPS = $(ANDROID_PREBUILT_DIR)/$(OPENSSL_DEP_FNAME)

#$(DEPS): | $(ANDROID_PREBUILT_DIR)
#	wget --no-check-certificate https://10.2.3.179/filely/android/$(@F) -O $@

#    unzip -o -qq ${_FILEY_NAME}
#    rm -f ${_FILEY_NAME}


# TODO what about multi-staged builds
docker_parent_parts = $(shell sed -n -e 's/FROM[[:space:]]\+\($(if $(2),$(subst /,\/,$(2)),[^[:space:]]\+)\):\([^[:space:]]\+\)/\1 \2/p' -e 'q' $(1))

#ANDROID_ARCHS ?= arm armv7 arm64 x86 x86_64

$(ANDROID_BUILD_DIR) $(ANDROID_PREBUILT_DIR):
	mkdir -p $@

$(ANDROID_PREBUILT_DIR): | $(ANDROID_BUILD_DIR)
	mkdir -p $@

.PRECIOUS: $(ANDROID_PREBUILT_DIR)/openssl_%.zip | $(ANDROID_PREBUILT_DIR)
$(ANDROID_PREBUILT_DIR)/openssl_%.zip:
	cd $(@D) && curl -fLO $(REPO_SOVRIN_ORG_ANDROID_PREBUILD_URL)/deps/openssl/openssl_$*.zip

.PRECIOUS: $(ANDROID_PREBUILT_DIR)/libsodium_%.zip | $(ANDROID_PREBUILT_DIR)
$(ANDROID_PREBUILT_DIR)/libsodium_%.zip:
	cd $(@D) && curl -fLO $(REPO_SOVRIN_ORG_ANDROID_PREBUILD_URL)/deps/sodium/libsodium_$*.zip

.PRECIOUS: $(ANDROID_PREBUILT_DIR)/libindy_android_%_$(LIBINDY_VERSION).zip | $(ANDROID_PREBUILT_DIR)
$(ANDROID_PREBUILT_DIR)/libindy_android_%_$(LIBINDY_VERSION).zip:
	cd $(@D) && curl -fLO $(REPO_SOVRIN_ORG_ANDROID_PREBUILD_URL)/$(LIBINDY_BRANCH)/$(LIBINDY_VERSION)/libindy_android_$*_$(LIBINDY_VERSION).zip

.PRECIOUS: $(ANDROID_PREBUILT_DIR)/%
$(ANDROID_PREBUILT_DIR)/%: $(ANDROID_PREBUILT_DIR)/%.zip
	unzip -o -qq  -d $(<D) $<
	touch $@

.PRECIOUS: $(ANDROID_PREBUILT_DIR)/libindy_%_$(LIBINDY_VERSION)
$(ANDROID_PREBUILT_DIR)/libindy_%_$(LIBINDY_VERSION): $(ANDROID_PREBUILT_DIR)/libindy_android_%_$(LIBINDY_VERSION).zip
	unzip -o -qq  -d $(<D) $<
	touch $@

prebuilt_%: $(ANDROID_PREBUILT_DIR)/openssl_% \
			$(ANDROID_PREBUILT_DIR)/libsodium_% \
			$(ANDROID_PREBUILT_DIR)/libindy_%_$(LIBINDY_VERSION) ;

build_android: $(patsubst %,prebuilt_%,$(ANDROID_ARCHS)) 
